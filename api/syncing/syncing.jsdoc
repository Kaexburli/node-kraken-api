/**
 * @author Justin Collier <jpcxme@gmail.com>
 * @license MIT
 * @see {@link http://github.com/jpcx/node-kraken-api|GitHub}
 */

/**
 * Types and methods specific to scheduling persistent {@link API~Caller} operations.
 *
 * @namespace API~Syncing
 * @property  {module:API/Syncing/loadSync} loadSync - Loads settings and loaded call function and returns stateful sync creation function.
 */

/**
 * Unique incrementing ID used for sync request identification.
 *
 * @typedef {number} API~Syncing~ID
 */

/**
 * Request information used during sync process.
 *
 * @typedef  {Object} API~Syncing~Request
 * @property {Kraken~Method} method - Method being called.
 * @property {API~Syncing~DynamicKrakenOptions} options - Dynamic options for sync operation.
 * @property {API~Syncing~Instance} instance - Sync instance.
 * @property {(API~Syncing~DataBuilder|undefined)} dataBuilder - Data building function.
 */

/**
 * Maps {@link API~Syncing~ID} to request parameters. Requests are processed in insertion order and repeated until all requests are dequeued.
 *
 * @typedef  {Map} API~Syncing~Requests
 * @property {API~Syncing~Request} * - Request information.
 */

/**
 * Timestamped {@link API~Calls~CallError}.
 *
 * @typedef  {Error}  API~Syncing~SyncError
 * @property {number} time     - Time of error (in ms).
 * @property {string} [action] - Action taken in response to the error. Errors that will not resolve over time will close the sync instance.
 */

/**
 * Maps {@link API~Syncing~ID}s to {@link API~Syncing~EventListener}s.
 *
 * @typedef {Map} API~Syncing~EventListeners
 */

/**
 * Callback for instance-specific events.
 *
 * @callback API~Syncing~EventListener
 * @param    {API~Syncing~SyncError} err  - Response error.
 * @param    {API~Calls~CallData}    data - Response data.
 * @param    {('error'|'data'|'open'|'close')} state - Type of event that triggered the callback.
 */

/**
 * A function which dynamically generates Kraken options based on previously received data.
 *
 * @typedef {Function} API~Syncing~DynamicOption
 * @param   {API~Syncing~InstanceData} instanceData - Current instance data.
 * @returns {Kraken~Option}            Option to send to the server.
 */

/**
 * An object which may contain functions that return {@link Kraken~Option}s for dynamic syncing.
 *
 * @typedef  {Object} API~Syncing~DynamicKrakenOptions
 * @property {(Kraken~Option|API~Syncing~DynamicOption)} * - May contain standard options or dynamic options.
 */

/**
 * The 'data' property for an {@link API~Syncing~Instance}. Starts as <code>{}</code> and is, by default, replaced by any errorless call data received during each update. Replacements may be configured using an {@link API~Syncing~DataBuilder} function.
 *
 * @typedef   {Object} API~Syncing~InstanceData
 */

/**
 * A function which returns an object to set as the 'data' property of an {@link API~Syncing~Instance}.
 *
 * @typedef {Function} API~Syncing~DataBuilder
 * @param   {API~Syncing~InstanceData}  instanceData - Instance data.
 * @param   {API~Calls~CallData}        data         - Current data.
 * @returns {API~Syncing~InstanceData}  Data to set as the instance.data property.
 */
